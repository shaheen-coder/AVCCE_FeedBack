# Generated by Django 5.2 on 2025-08-29 05:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('staff', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentBase',
            fields=[
                ('regno', models.BigIntegerField(primary_key=True, serialize=False)),
                ('dob', models.DateField()),
                ('name', models.CharField(max_length=30)),
                ('gender', models.BooleanField()),
                ('dept', models.CharField(choices=[('CSE', 'be-cse'), ('IT', 'btech-it'), ('EEE', 'be-eee'), ('ICE', 'be-ice'), ('ECE', 'be-ece'), ('MECH', 'be-mech'), ('CIVIL', 'be-civil'), ('AIDS', 'be-aids')], max_length=5)),
                ('active', models.BooleanField(default=True)),
                ('batch', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('staff', 'Staff'), ('hod', 'Head of Department'), ('principal', 'Principal')], max_length=20)),
                ('dept', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.staff')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=1)),
                ('semester', models.SmallIntegerField()),
                ('feed1_status', models.BooleanField(blank=True, default=False, null=True)),
                ('feed2_status', models.BooleanField(blank=True, default=False, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.studentbase')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.CharField(max_length=5)),
                ('semester', models.SmallIntegerField()),
                ('section', models.CharField(max_length=1)),
                ('dept', models.CharField(choices=[('CSE', 'be-cse'), ('IT', 'btech-it'), ('EEE', 'be-eee'), ('ICE', 'be-ice'), ('ECE', 'be-ece'), ('MECH', 'be-mech'), ('CIVIL', 'be-civil'), ('AIDS', 'be-aids')], max_length=5)),
                ('feed1', models.JSONField(blank=True, null=True)),
                ('feed2', models.JSONField(blank=True, null=True)),
                ('msg', models.CharField(blank=True, max_length=50, null=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.staff')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.subject')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.studentbase')),
            ],
        ),
    ]
